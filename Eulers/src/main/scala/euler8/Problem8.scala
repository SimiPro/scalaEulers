package euler8

object Problem8 extends App {

  var number = "731671765313306249192251196744265747423553491949349698352" +
  		"0312774506326239578318016984801869478851843858615607891129494954" +
  		"5950173795833195285320880551112540698747158523863050715693290963" +
  		"2952274430435576689664895044524452316173185640309871112172238311" +
  		"3622298934233803081353362766142828064444866452387493035890729629" +
  		"0491560440772390713810515859307960866701724271218839987979087922" +
  		"7492190169972088809377665727333001053367881220235421809751254540" +
  		"5947522435258490771167055601360483958644670632441572215539753697" +
  		"8179778461740649551492908625693219784686224828397224137565705605" +
  		"7490261407972968652414535100474821663704844031998900088952434506" +
  		"5854122758866688116427171479924442928230863465674813919123162824" +
  		"5861786645835912456652947654568284891288314260769004224219022671" +
  		"0556263211111093705442175069416589604080719840385096245544436298" +
  		"1230987879927244284909188845801561660979191338754992005240636899" +
  		"1256071760605886116467109405077541002256983155200055935729725716" +
  		"36269561882670428252483600823257530420752963450"
  	var eachDigit = number.map(_.asDigit)
  	var startIndex = 0
  	var size = number.size - 1 
  	var biggestNumber = 0
  	var counter = 0
  	for (counter <- 0 to size
  	    if startIndex + 4 <= size) {
  	    println("Size: " + size)
  	    println("Index: " + startIndex)
  		var sum = 1
	  	for (eachDigit <- startIndex to startIndex + 4){
	  		var digitz = number.apply(eachDigit).toString.toInt
	  		sum *= digitz
	  	}
	  	if (biggestNumber < sum) {
	  	  biggestNumber = sum
	  	}
	  	startIndex = startIndex + 1
  	}
  	println(biggestNumber)
}